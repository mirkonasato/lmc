name: Cross-Build
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - name: linux-x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: lmc
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
            binary: lmc
          - name: macos-x86_64
            runner: macos-latest
            target: x86_64-apple-darwin
            binary: lmc
          - name: windows-x86_64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            binary: lmc.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
      - name: Set up cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --locked --release --target ${{ matrix.target }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: lmc-${{ github.ref_name }}-${{ matrix.name }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary }}
          retention-days: 1
